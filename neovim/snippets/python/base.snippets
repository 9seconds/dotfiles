# vim: set ft=snippets

snippet #! "Insert shebang" b
	#/usr/bin/${1:env ${2:python3}}

snippet im "Import clause" b
	import ${0:module}

snippet fr "from/import clause" b
	from ${1:module} import ${0:something}

snippet wh "wrap in while loop" b
	while ${1:expr}:
	  ${0:$TM_SELECTED_TEXT}

snippet with "wrap in with clause" b
	with ${1:expr} as ${2:var}:
	  ${0:$TM_SELECTED_TEXT}

snippet awith "wrap in async with clause" b
	async with ${1:expr} as ${2:var}:
	  ${0:$TM_SELECTED_TEXT}

snippet pdb "Insert pdb" b
	import ${1:pdb}; $1.set_trace()

snippet def "Function definition" b
	def ${1:name}(${2:`!lua vim.fn.indent(".") > 0 and "self" or ""`}):
	  ${0:$TM_SELECTED_TEXT}

snippet adef "Function definition" b
	async def ${1:name}(${2:`!lua vim.fn.indent(".") > 0 and "self" or ""`}):
	  ${0:$TM_SELECTED_TEXT}

snippet tryex "try/except clause" b
	try:
		${0:$TM_SELECTED_TEXT}
	except ${1:Exception} as ${2:exc}:
		${3:pass}

snippet tryfi "try/finally clause" b
	try:
		${0:$TM_SELECTED_TEXT}
	finally:
		${1:pass}

snippet prop "Property definition" b
	@property
	def ${1:name}(self):
		return self.${2:_$1}

	@$1.setter
	def $1(self, value):
		self.$2 = value
