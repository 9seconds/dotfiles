#!/usr/bin/env bash
# vim: set ft=bash et ts=2 sw=2 sts=2:
set -eu -o pipefail

#
#  Select changed files
#

ARGS=$(getopt \
  -n "git changed" \
  --longoptions "help,compare:,untracked" \
  --options "hu" \
  -- "$@")
[[ $? -ne 0 ]] && exit 1
eval set -- "$ARGS"

UNTRACKED=false

while [ : ]; do
  case "$1" in
    -h | --help)
      echo "Select changed files"
      echo "  -h, --help         Display this help message"
      echo "  -u, --untracked  * Include untracked files"
      exit 0
      ;;
    --)
      shift;
      break
      ;;
    -u | --untracked)
      UNTRACKED=true
      shift
      ;;
  esac
done

COMPARE="${1:-}"


GIT_ROOT="$(git rev-parse --show-toplevel)"
if [[ $GIT_ROOT == "" ]]; then
  echo "Cannot find out a git root" >&2
  exit 1
fi

if [[ $COMPARE == "" ]]; then
  current_branch="$(git branch --show-current)"

  if [[ $current_branch == "" ]]; then
    echo "Cannot find out a current branch" >&2
    exit 1
  fi

  COMPARE="$(git rev-parse --abbrev-ref "$current_branch@{upstream}" || echo "origin/master")"
fi
CURRENT_DIR="$PWD"


ls_files_opts=(
  "--exclude-standard"
  "--no-empty-directory"
  "--full-name"
  "--unmerged"
  "--cached"
  "--deleted"
  "--stage"
  "--modified"
  "-t")

if $UNTRACKED; then
  ls_files_opts+=("--others")
fi

LC_ALL=C sort \
    --ignore-case \
    --unique \
    --parallel=$(nproc) \
    --field-separator=/ \
  <(cd "$GIT_ROOT" \
    && git diff --name-only "$COMPARE" \
    |  xargs realpath "--relative-to=$CURRENT_DIR" 2>/dev/null) \
  <(cd "$GIT_ROOT" \
    && git ls-files "${ls_files_opts[@]}" \
    |  awk '{print $NF}' \
    |  xargs realpath "--relative-to=$CURRENT_DIR" 2>/dev/null) \
| git fzf \
    --prompt File \
    --preview "git dff $COMPARE {-1} 2>/dev/null || bat -p {-1} 2>/dev/null || echo 'deleted'" \
    --multi
