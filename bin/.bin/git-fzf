#!/usr/bin/env bash
# vim: set ft=bash et ts=2 sw=2 sts=2:
set -eu -o pipefail

#
# This is just a wrapper for a common fzf stuff I use in git
#

export DFT_DISPLAY=inline
export DFT_COLOR=always
export DFT_TAB_WIDTH=4

PROMPT=""
PREVIEW=""
QUERY=""
MULTI=false

ARGS=$(getopt \
  -n "git fzf" \
  --longoptions "help,preview:,prompt:,query:,multi" \
  --options "hv:p:q:m" \
  -- "$@")
[[ $? -ne 0 ]] && exit 1
eval set -- "$ARGS"

while [ : ]; do
  case "$1" in
    -h | --help)
      echo "fzf wrapper for various git output (* means is accepts value)"
      echo "  -h, --help        Display this help message"
      echo "  -v, --preview   * Script to use for a fzf preview"
      echo "  -p, --prompt    * A symbol to use as a prompt"
      echo "  -q, --query     * Preseed fzf query"
      echo "  -m, --multi       Enable multiselection"
      exit 0
      ;;
    --)
      shift;
      break
      ;;
    -p | --prompt)
      PROMPT="$2"
      shift 2
      ;;
    -v | --preview)
      PREVIEW="$2"
      shift 2
      ;;
    -q | --query)
      QUERY="$2"
      shift 2
      ;;
    -m | --multi)
      MULTI=true
      shift
      ;;
  esac
done


fzf_args=(
  "--ansi"              # respect ansi colors
  "--tabstop=4"         # tab is 4 spaces
  "--select-1"          # always select 1st option if there are no other ones
  "--exit-0"            # exit if not prompt
  "--height=~60%"       # occupy max 60% of screen
  "--layout=reverse"    # show results in reverse (below promp)
  "--border=none"       # do not draw any funky borders
  "--no-separator"      # do not show any separator between prompt
  "--no-scrollbar"      # no visual scrollbar
  "--info=hidden"       # do not show useless stats
  "--prompt=$PROMPT> "  # prompt symbol

  # ctrl-n for scrolling preview down
  "--bind=ctrl-n:preview-down"

  # ctrl-p for scrolling preview up
  "--bind=ctrl-p:preview-up"
)

if [[ $PREVIEW != "" ]]; then
  fzf_args+=("--preview=$PREVIEW")
fi

if [[ $QUERY != "" ]]; then
  fzf_args+=("--query=$QUERY")
fi

if $MULTI; then
  fzf_args+=("--multi")
fi


exec fzf "${fzf_args[@]}"
