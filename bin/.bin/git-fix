#!/usr/bin/env bash
set -eu -o pipefail

checksum() {
  echo -n -- "$@" | sha1sum - | awk '{print $1}'
}

error() {
  echo "$@"
  exit 1
}

# convert all command line parameters to filenames
declare -a filenames=("$@")

if [[ ${#filenames[@]} == 0 ]]; then
  error "No paths are specified"
fi

TMPDIR="$(mktemp -d)"
trap "rm -rf $TMPDIR" EXIT

# run git log in parallel and wait
ALL_COLLECTED=1
for filename in "${filenames[@]}"; do
  git add $filename
  git log \
      --date=short \
      '--pretty=format:%C(auto)%h (%ad) %Cgreen%aN%Cblue%d%Creset: %s' \
      --no-merges \
      --abbrev-commit \
      --color=always \
    -- "$filename" > "$TMPDIR/$(checksum "$filename")" &
done

for job in $(jobs -p); do
  wait $job || let "ALL_COLLECTED=0"
done

if [[ $ALL_COLLECTED == 0 ]]; then
  error Cannot collect required output
fi

# show lines that happens in each and every file log
cat $TMPDIR/* | awk -v "expected=${#filenames[@]}" -S '
{
  count[$0]++;
  if ($0 in position == 0)
    position[$0] = NR
}

END {
  for (i in count)
    if (count[i] == expected)
      print(position[i], i)
}
' | sort -k 1 -n --parallel=$(nproc) \
  | cut -f2- -d' ' \
  | fzf \
      --prompt 'Commit> ' \
      --height=~50% \
      --layout=reverse \
      --border=none \
      --no-separator \
      --no-scrollbar \
      --info=hidden \
      --ansi \
  | awk '{print $1}' \
  | xargs -r -n 1 git commit --fixup
