#!/bin/bash
# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org/>

# This script is a wrapper for Restic backup tool
# https://restic.github.io/

set -eu -o pipefail

# -----------------------------------------------------------------------------

. /etc/rbackup/config
# RESTIC_REPOSITORY    - repository for Restic backup
# RESTIC_EXCLUDE_FILE  - path to the exclude file of Restic backup
# RESTIC_PASSWORD_FILE - password for Restic backup
# MAIN_USER            - username of the main user for backup

# -----------------------------------------------------------------------------

# Main variables
MAIN_HOMEDIR="$(getent passwd "${MAIN_USER}" | cut -f 6 -d ":")"
RESTIC_EXCLUDE_FILE="$(readlink -e "${RESTIC_EXCLUDE_FILE}")"
RESTIC_PASSWORD_FILE="$(readlink -e "${RESTIC_PASSWORD_FILE}")"
RESTIC_TOOL_DIR="${MAIN_HOMEDIR}/.local/bin"

# Keep within policy
KEEP_POLICY="--keep-last 10 --keep-daily 1 --keep-weekly 4 --keep-monthly 3"

# Misc variables
PAGER="less -FX"
RESTIC_OPTIONS="--password-file ${RESTIC_PASSWORD_FILE}"
RESTIC_TOOL="${RESTIC_TOOL_DIR}/restic ${RESTIC_OPTIONS}"

# Environment variables
export LANG=C.UTF-8
export LC_ALL="${LANG}"

# -----------------------------------------------------------------------------

print_help() {
  echo "$(basename $0) is a small wrapper around Restic backup."
  echo "https://restic.github.io"
  echo
  echo "Commands available:"
  echo "  cmd            Execute Restic command"
  echo "  create         Creates new archive in repository"
  echo "  delete         Remove snapshot"
  echo "  list           List backups"
  echo "  mount          Mount repository to FS"
  echo "  prune          Prune repository"
  echo "  size           Printout total size of backup."
  echo "  unlock         Remove all locks in repository."
  echo "  update-restic  Updates Restic in place"
}

backup_cmd() {
    ${RESTIC_TOOL} "$@"
}

backup_create() {
    backup_create_dir "/etc" "/usr/local" "${MAIN_HOMEDIR}"
}

backup_create_dir() {
    ${RESTIC_TOOL} backup \
            --one-file-system \
            --exclude-file "${RESTIC_EXCLUDE_FILE}" \
        "$@"
}

backup_delete() {
    ${RESTIC_TOOL} forget "$@"
}

backup_list() {
    ${RESTIC_TOOL} snapshots | ${PAGER}
}

backup_mount() {
    target="$(mktemp -d)"
    fumount() {
        umount "$target" >/dev/null 2>&1 \
            && rm -rf "$target"
    }
    trap fumount EXIT

    echo "$target"
    ${RESTIC_TOOL} mount "$target" >/dev/null 2>&1
}

backup_prune() {
    ${RESTIC_TOOL} forget ${KEEP_POLICY} \
        && ${RESTIC_TOOL} prune
}

backup_size() {
    du -sh "${RESTIC_REPOSITORY}" | awk 'NR == 1 {print $1}'
}

backup_unlock() {
    ${RESTIC_TOOL} unlock --remove-all
}

update_restic() {
    local url="$1"

    curl -sLf -o - "$url" | bzip2 -d > "${RESTIC_TOOL_DIR}/restic" \
        && chmod +x "${RESTIC_TOOL_DIR}/restic" \
        && "${RESTIC_TOOL_DIR}/restic" version
}

# -----------------------------------------------------------------------------

if [[ $# -eq 0 ]]; then
    OPTION=""
else
    OPTION="$1"
    shift
fi

case "${OPTION}" in
    create)
        backup_create "$@"
        ;;
    cmd)
        backup_cmd "$@"
        ;;
    size)
        backup_size "$@"
        ;;
    list)
        backup_list "$@"
        ;;
    prune)
        backup_prune "$@"
        ;;
    mount)
        backup_mount "$@"
        ;;
    update-restic)
        update_restic "$@"
        ;;
    unlock)
        backup_unlock "$@"
        ;;
    -h|--help|help)
        print_help "$@"
        ;;
    *)
        print_help "$@"
        exit 1
        ;;
esac
