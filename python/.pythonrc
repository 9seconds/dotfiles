# vim: set ft=python:


def mount_prettyprint():
    import sys
    import builtins

    try:
        from prettyprinter import cpprint as pprint, install_extras
    except ImportError:
        from pprint import pprint
    else:
        install_extras(warn_on_error=False)

    def displayhook(value):
        """Pretty print stuff by default."""

        if value is not None:
            builtins._ = None
            pprint(value)
            builtins._ = value

    builtins._pp = pprint
    sys.displayhook = displayhook


try:
    mount_prettyprint()
finally:
    del mount_prettyprint


def mount_icecream():
    import builtins

    try:
        import icecream
    except ImportError:
        builtins.ic = lambda *a: None if not a else (a[0] if len(a) == 1 else a)
    else:
        builtins.ic = icecream.ic
        icecream.ic.configureOutput(includeContext=True, contextAbsPath=True)


try:
    mount_icecream()
finally:
    del mount_icecream


def mount_ex():
    import builtins

    try:
        import rich
    except ImportError:
        builtins._ex = dir
    else:
        builtins._ex = lambda arg: rich.inspect(arg, all=True)


try:
    mount_ex()
finally:
    del mount_ex


def mount_so():
    import inspect
    import builtins

    try:
        import pygments
        import pygments.formatters
        import pygments.lexers

        lexer = pygments.lexers.PythonLexer()
        formatter = pygments.formatters.TerminalFormatter()
    except Exception:
        builtins._so = inspect.getsource
    else:
        builtins._so = lambda obj: pygments.highlight(
            inspect.getsource(obj),
            lexer,
            formatter)


try:
    mount_so()
finally:
    del mount_so


def mount_completer():
    try:
        import jedi.utils
    except ImportError:
        return
    else:
        jedi.utils.setup_readline()


try:
    mount_completer()
finally:
    del mount_completer
