# -*- coding: utf-8 -*-
# vim: set ft=python:


def _install_pprint_displayhook():
    import sys
    import pprint

    try:
        import __builtin__ as builtins
    except ImportError:
        import builtins

    def displayhook(value):
        """Pretty print stuff by default."""

        if value is not None:
            builtins._ = value
            pprint.pprint(value)

    sys.displayhook = displayhook


def _install_src():
    import inspect

    try:
        import pygments
        import pygments.formatters
        import pygments.lexers

        lexer = pygments.lexers.PythonLexer()
        formatter = pygments.formatters.TerminalFormatter()
    except Exception:
        return inspect.getsource
    else:
        def src(obj):
            return pygments.highlight(inspect.getsource(obj), lexer, formatter)

        return src


def _install_completer():
    import atexit
    import os
    import os.path
    import readline
    import sys

    try:
        import jedi.utils
    except ImportError:
        if sys.version_info.major < 3:
            import rlcompleter  # noqa

            readline.parse_and_bind("tab: complete")
    else:
        jedi.utils.setup_readline()

    history_dir = os.path.join(os.path.expanduser("~"), ".pyhistory")
    if not os.path.isdir(history_dir):
        try:
            os.makedirs(history_dir)
        except Exception:
            return

    executable_inode = os.stat(sys.executable).st_ino
    history_file = os.path.join(history_dir, str(executable_inode))

    if os.path.exists(history_file):
        readline.read_history_file(history_file)

    atexit.register(readline.write_history_file, history_file)


try:
    _install_completer()
except Exception as exc:
    import warnings
    import os

    message = "Cannot inititalize PYTHONSTARTUP file ({0}): {1}".format(
        os.getenv("PYTHONSTARTUP"), exc)
    warnings.warn(message, RuntimeWarning)

    del warnings
    del os
finally:
    del _install_completer


try:
    src = _install_src()
finally:
    del _install_src


try:
    reload
except NameError:
    import importlib

    reload = importlib.reload

    del importlib


try:
    from see import see  # noqa
except ImportError:
    see = dir


try:
    _install_pprint_displayhook()
finally:
    del _install_pprint_displayhook
